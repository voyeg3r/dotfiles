#!/bin/bash
#
#  Piano Gripe 3.0 - The Shell Music    			      #
#      OBS: Favor nao confundir com axÈ music			      ##
#							   Natal-RN   ###
# Autor: Pablo Fernandes (fernandes_pablo@yahoo.com.br)   ----------  ####
#        ----------------------------------------------   28.10.2003  #####
#								      ######
#############################################################################
#
# ---------------
# Agradecimentos: Grupo de Discuss„o "Shell Script" (Yahoo)
#    ESPECIAIS    AurÈlio Marinho Jargas (http://aurelio.net)
# --------------- Seu nome (seu e-mail)
#
# 	[Caso de bug, melhorias no cÛdigo, enxudaga, ajuda ou como seja,]
#	[resultar· em seu nome nos agradecimentos especiais. Ajude a man]
#	[ter esse software propondo melhorias ou corrigindo erros.      ]
#
###########################################################################
# Como usar: 							     #####
#    $ ./gripe		* simplesmente execute-o		     ####
#			* Verifique se vocÍ possui a permiss„o x     ###
#			  no arquivo. Caso n„o tenha digite:	     ##
#			  "chmod +x gripe" com o dono do arquivo     #
#
# Como usar    As teclas A, S, D, F, G, H, J, K, L, Z, X, C, V, B,
#              1, 2, 3, 4, 5, 6, 7, 8, 9 e 0 s„o usadas para representar
#              as teclas de um teclado. Nele vir„o marcadas essas teclas.
#
#      OBS2: A opÁ„o "P" (do quadro de opÁıes), adiciona um espaÁo sem
#	     m˙sica para ajudar em suas composiÁıes.
#
# OpÁıes: W	- Toda tecla pressionada È gravada na linha de sequÍncia.
#		  Essa opÁ„o toca as notas definidas na "sequÍncia".
#
#	  E	- Apaga a sequÍncia criada anteriormente, impossibilitando
#		  de tocar m˙sicas atÈ que pelo menos uma nota seja especi
#		  ficada novamente no espaÁo de sequÍncia.
#
#	  T	- Salva sequÍncia no diretÛrio $HOME/gripe/ com extens„o .shm
#		  (ShellMusic)
#
#	  Q	- Sai do programa e apaga o espaÁo sequÍncia.
#
#	  P	- Pausa na sequÍncia.
#
#	  +	- Aumenta o tempo entre notas
#	  -	- Diminue o tempo entre as notas
#
#	  R	- Exemplos de m˙sicas (Beatles - Day Tripper
#						e Black Sabbath - Iron Man)
#
###########################################################################
#
# ATEN«√O1: O PIANO GRIPE 3.0 FOI TESTADO APENAS NO CONECTIVA "8++" E "9"
#	    E FEDORA CORE 1 e 2.
#           SE VOC  OBTEU  XITO TOTAL EM OUTRA DISTRIBUI«√O, ENVIE UM E-MAIL
#	    AVISANDO A SUA DISTRO. CASO VOC  N√O TENHA CONSEGUIDO EXECUT¡-LO
#	    AVISE TAMB…M POR E-MAIL A DISTRO. OBRIGADO
#           ----------------------------------------------------------------
#
# ATEN«√O2: Execute o programa em MODO TEXTO (n„o execute-o em um terminal
#	    do modo gr·fico).
#
# AVISO: Na vers„o 4.0 do Piano Gripe, ser· adicionado um backspace de
#        notas musicais para o teclado.
#
###########################################################################
#								      ####
# REGISTRO DE MUDAN«AS E ATUALIZA«’ES:	Changelog		      ###
# ------------------------------------				      ##
#								      #
# 28.10.2003: Iniciada e concluÌda a primeira vers„o (0.10)
# 01.11.2003: Corrigido BUG (um ponto desconhecido flutuando
#	      no cÛdigo (detectado por AurÈlio Marinho Jargas)
# 01.11.2003: Corrigido BUG (quem usava LANG=en_US n„o executava
#	      as m˙sicas por causa do comando sleep ,n˙mero)
# 01.11.2003: Adiciona o comando "T" possibilitando gravar as m˙sicas
# 01.11.2003: Corrigido BUG (quem tinha o diretÛrio home com espaÁos
#	      no nome, dava uma sÈrie de erros. SoluÁ„o: Aspear
#	      duplamente todas as vari·veis)
# 20.11.2003: Restringe em 91 notas m·ximas por m˙sica. Se no prompt
#	      SEQU NCIA aparecessem mais de 100 "+Sol#"s o programa
#	      dava txiutxi nos gr·ficos, pq sÛ de notas, iria passar
#             de uma tela. Mas se alguÈm insistir muito (que acho muito
#	      difÌcil, procurarei outra soluÁ„o para o problema.
# 30.11.2003: Pequenos tutoriais sobre caracteres de controle espalhados
#	      pelo cÛdigo.
# 13.12.2003: Um bug resolvido. DescriÁ„o: Se vocÍ salvasse o arquivo
#	      "gripe" no diretÛrio $HOME, ele dava erros na hora de salvar
#	      uma sequÍncia.
# 18.02.2004: Depois de muito tempo jogado, sem receber nenhuma atualizaÁ„o,
#	      resolvi baix·-lo do site (que nem tinha mais ele no meu comp.)
#	      surgiu um bug no sleep. Antigamente via que para shells com a
#	      vari·vel de ambiente $LANG estava para en_US, a sintaxe do
#	      sleep era "sleep .10" por exemplo, e pra $LANG=pt_BR a sintaxe
#	      mudava para "sleep ,10". E agora fiz o teste para ambas
#	      configuraÁıes e vi que funcionou com "sleep .n"
# 03.06.2004: "Bom, fazia tempo que o programa nao tinha nenhuma mudanÁa
#	       pois havia perdido a versao completa e mais atualizada que
#	       eu tinha feito na epoca. As novidades sao:"
# 02.06.2004: Mudei de distribuiÁao (do Conectiva para a Fedora Core) e
#	      percebi algumas mudanÁas. Agora retirei os acentos de todo
#	      o programa (aceto os que ficam dentro de arquivos, como este),
#	      pois o fedora tem problemas com acentos para visualizaÁao
#	      no console. Ainda nao sei pq, dentro do vi consigo ver os
#	      acentos (apesar de nao conseguir digita-los) mas se fosse
#	      um e-mail ou mesmo no Piano Gripe, eles nao aparecem. Pois
#	      e, a atualizaÁao foi retirada de acentos.
# 02.06.2004: Tambem tive problemas com a variavel $LANG (novamente) e a
#	      sintaxe do programa sleep. Agora todo o programa roda com
#	      LANG=en_US e na finalizaÁao do Piano, ela e recuperada para o
#	      normal do usuario.
# 02.06.2004: MudanÁa nos Leds, agora quando estamos tocando, os leds Num
#	      Lock e Caps Lock ficam acendendo e apagando :) . Quis fazer
#	      com o Scroll Lock tambem, mas no conectiva nao liga nem a pau
#	      usando setleds +scroll. No Fedora ele liga, no slack, debian
#	      tambem deve ligar. Mas para nao causar problemas, deixei so
#	      os dois mesmo.
# 02.06.2004: Marcacoes nas notas tocadas. Toda nota tocada fica marcada
#	      de vermelha.
# 02.06.2004: Ah, as teclas agora podem ser tocadas em tempo real. Nao
#	      precisa de teclar mais enter para sair o som da nota.
# 03.06.2004: Algumas mudanÁas no codigo, na parte de salvar arquivos.
#	      Criei uma funÁao para fazer tudo, diminuindo o codigo.
#							GNU
##          ####     ##     ##    ##     ##    ###     ####
##           ##      ###    ##    ##     ##      ##   ##
##           ##      ####   ##    ##     ##       ## ##
##           ##      ## ##  ##    ##     ##        ###
##           ##      ##  ## ##    ##     ##       ## ##
##           ##      ##   ####    ##     ##      ##   ##
########    ####     ##    ###     ######      #####  ####
#
#		[FA«A TAMB…M UM SOFTWARE LIVRE]
# ------------------------------------------------------------------------
# Futuros Planos: Organizar cÛdigo, e deix·-lo auto explicativo
#		  para estudantes (como eu) de shell Script.
#
#		  Adicionar exemplos de m˙sicas conhecidas arqu
#		  ivada no prÛrpio cÛdigo
#
#		  Testar em v·rias distribuiÁıes do linux.
#		  AtÈ agora o Piano Gripe sÛ foi testado no Con
#		  ectiva Linux 8++, 9, Fedora Core 1 e 2.
#
#		  Encontrar uma forma do Piano Gripe rodar no m
#		  odo gr·fico (terminal do modo gr·fico).
#
#		  Fazer um backspace de notas para apagar a ˙lt
#		  ima nota tocada.
#
#		  Gringorizar passando para inglÍs todos os coment·rios
#		  e textos do programa (mas sem deixar a portuguÍs obviamente)
#		  fazendo duas versıes. ptBR and enUS
#
###########################################################################
#
# Pq Piano Gripe?
# ---------------
#
#	Simplesmente pelo timbre gerado pelo auto-falante do micro.
#	Parece um timbre rouco e gripado.
#
# Interesses do Piano Gripe:
# --------------------------
#
#	Estudo, divers„o e divulgaÁ„o :)
#	Envie um e-mail para fernandes_pablo@yahoo.com.br
#	se vocÍ gostou, ou se seu filho mais novo gostou :D
#
###########################################################################
# OrganizaÁ„o do cÛdigo :
# -----------------------
# O cÛdigo do Piano Gripe encontra-se dividido em sessıes. Cada sess„o
# possui seus coment·rios e algumas dicas sobre algum assunto predominante
# no cÛdigo fonte da sess„o. Entre cada sess„o, existe uma barra horizontal
# de 76 caracteres e duas quebras de linhas.
#
###########################################################################
#
# Os Comentarios do Codigo so serao atualizados nas versoes x.50
# No caso, na versao 3.50. Sempre vou fazer assim, pq exige muito
# tempo para comentar todo o codigo, e ainda mais quando e uma versao
# nova (que ainda vai ter correÁoes).
#
###########################################################################
## COME«A O C”DIGO ###
#####################


## Sess„o:
#########################
## MODULOS NECESSARIOS ##
#########################
# Esta sessao tem os comandos necessarios para
# levantar os modulos.

# Este modulo pensei basicamente para o Fedora Core 2 que por
# padrao nao tem mais os beeps :( Aposto que fizeram isso para
# boicotar o Piano Gripe do mercado. hehehe
modprobe pcspkr 2> /dev/null > /dev/null


#--------------------------------------------------------------------------#


## Sess„o:
#######################
## MAPA DE VARI¡VEIS ##
#######################
# Nesta sess„o est„o definidas todas as vari·veis
# com seus valores iniciais.

SALVALANG=$LANG
LANG=en_US
CONTASHM=1	#Contagem de notas. Cada nota tocada, adiciona uma unidade
		#desse valor. M·ximo de notas permitidas:90 (CONTSHM=91 j·
		#o valor inicial È 1)
SHMLEDDY=1
EXEMPLOSHM=1
SLEEPSHMLANG="sleep .4;"
BARRA40SHM="PIANOGRIPEPABLOGRIPEPIANOGRIPEPABLOGRIPE"

## NOTAS MUSICAIS E SUAS RESPECTIVAS FREQ‹ NCIAS ##
DO='echo -ne \'\033[10\;132]\\a''
RE='echo -ne \'\033[10\;148]\\a''
MI='echo -ne \'\033[10\;165]\\a''
FA='echo -ne \'\033[10\;176]\\a''
SOL='echo -ne \'\033[10\;198]\\a''
LA='echo -ne \'\033[10\;220]\\a''
SI='echo -ne \'\033[10\;247]\\a''
DO1='echo -ne \'\033[10\;264]\\a''
RE1='echo -ne \'\033[10\;296]\\a''
MI1='echo -ne \'\033[10\;330]\\a''
FA1='echo -ne \'\033[10\;352]\\a''
SOL1='echo -ne \'\033[10\;396]\\a''
LA1='echo -ne \'\033[10\;440]\\a''
SI1='echo -ne \'\033[10\;494]\\a''
DOS='echo -ne \'\033[10\;143]\\a''  #DOS? AAAAAAAAAH N√O...!
RES='echo -ne \'\033[10\;157]\\a''
FAS='echo -ne \'\033[10\;187]\\a''
SOLS='echo -ne \'\033[10\;209]\\a''
LAS='echo -ne \'\033[10\;233]\\a''
DOS1='echo -ne \'\033[10\;286]\\a''
RES1='echo -ne \'\033[10\;314]\\a''
FAS1='echo -ne \'\033[10\;374]\\a''
SOLS1='echo -ne \'\033[10\;418]\\a''
LAS1='echo -ne \'\033[10\;466]\\a''

######### CONSEGUINDO TIRAR SONS DO BEEP PELO COMANDO ECHO #################
#
# Para conseguir um som do speaker do seu computador, basta utilizar o
# caractere barra-letra \a (ALERTA). Se vocÍ digitar echo -ne '\a', vai
# ver que um beep soar·. Basta agora vocÍ definir o tom e duraÁ„o
# do beep. Para isso, use:
#
# echo -ne '\033[10;N1]\a' -> onde N1 È a frequÍncia. Quanto maior o
#			      valor da frequÍncia (Hz), mais agudo a nota
#			      sair·. Quanto menor for o valor, mais grave.
# echo -ne '\033[11;N1]\a' -> onde N1 È a duraÁ„o do som.
#	      __________________________________________
#        ---> O normal È \033[10;750]   e   \033[11;100] <---
#
# OBS1: Depois de brincar com o seu beep, n„o esqueÁa de voltar para os
#       valores normais do beep.
#
# DICA: Defina a duraÁ„o antes de definir o tom.
#       ex: echo -ne '\033[11;500]\033[10;1000]\a'
#       (Defina duraÁ„o 500, defina tom 1000, toque um beep com \a)
#
# OBS2: Esse caractere de controle do beep, n„o toca um beep, ele apenas
#       define o tom e duraÁ„o. Quem toca o beep È o "\a", entre outras
#       formas.


#--------------------------------------------------------------------------#


## Sess„o:
#################
## FERRAMENTAS ##
#################
# Ferramentas escritas em funÁıes feitas
# para auxiliar o desenvolvimento e limpeza
# do cÛdigo. Elas ficar„o aqui!

##### APREDENDO A MODIFICAR A POSI«√O DO CURSOR ############################
#
# 1) Sempre que vocÍ ver um "VAIPARA N1 N2", quer dizer que o cursor muda
#    da linha atual, para a linha N1 e coluna N2. Exemplo: VAIPARA 1 1 ->
#    Nesse caso o cursos vai para a linha 1 e coluna 1. Todo "echo" (ou o
#    que seja) abaixo desse VAIPARA ser· inserido na linha 1, coluna 1.
#    Aquele aviso inicial do programa, bem centralizado, pq est· em uma das
#    linhas centrais do monitor, e em uma das colunas centrais tambÈm.
#    S„o 25 linhas e 80 colunas. FaÁa o teste, digite
#    echo -e '\033[N1;N2Htexto aqui!' substituindo N1 pela linha e N2
#    pela coluna. Existem outros caracteres de controle para indicar a
#    direÁ„o do cursor, mas o H È o que eu mais gosto :)

function VAIPARA() { echo -ne "\033[$1;$2H" ;}   #1


# Deixa marcada com cores a nota tocada

function MARKNOTAUP() {
  case "$MARKNOTASHM" in
    DO) VAIPARA 12 4
	echo -e '\033[37;41;1mA\033[m' ;;
    RE) VAIPARA 12 8
	echo -e '\033[37;41;1mS\033[m' ;;
    MI) VAIPARA 12 12
	echo -e '\033[37;41;1mD\033[m' ;;
    FA) VAIPARA 12 16
	echo -e '\033[37;41;1mF\033[m' ;;
    SOL) VAIPARA 12 20
	 echo -e '\033[37;41;1mG\033[m' ;;
    LA) VAIPARA 12 24
	echo -e '\033[37;41;1mH\033[m' ;;
    SI) VAIPARA 12 28
	echo -e '\033[37;41;1mJ\033[m' ;;
    DO1) VAIPARA 12 32
	 echo -e '\033[37;41;1mK\033[m' ;;
    RE1) VAIPARA 12 36
	 echo -e '\033[37;41;1mL\033[m' ;;
    MI1) VAIPARA 12 40
         echo -e '\033[37;41;1mZ\033[m' ;;
    FA1) VAIPARA 12 44
         echo -e '\033[37;41;1mX\033[m' ;;
    SOL1) VAIPARA 12 48
         echo -e '\033[37;41;1mC\033[m' ;;
    LA1) VAIPARA 12 52
         echo -e '\033[37;41;1mV\033[m' ;;
    SI1) VAIPARA 12 56
         echo -e '\033[37;41;1mB\033[m' ;;
    DOS) VAIPARA 7 6
	 echo -e '\033[37;41;1m1\033[m' ;;
    RES) VAIPARA 7 10
	 echo -e '\033[37;41;1m2\033[m' ;;
    FAS) VAIPARA 7 18
	 echo -e '\033[37;41;1m3\033[m' ;;
    SOLS) VAIPARA 7 22
	  echo -e '\033[37;41;1m4\033[m' ;;
    LAS) VAIPARA 7 26
	 echo -e '\033[37;41;1m5\033[m' ;;
    DO1S) VAIPARA 7 34
	  echo -e '\033[37;41;1m6\033[m' ;;
    RE1S) VAIPARA 7 38
	  echo -e '\033[37;41;1m7\033[m' ;;
    FA1S) VAIPARA 7 46
	  echo -e '\033[37;41;1m8\033[m' ;;
    SOL1S) VAIPARA 7 50
	  echo -e '\033[37;41;1m9\033[m' ;;
    LA1S) VAIPARA 7 54
	  echo -e '\033[37;41;1m0\033[m' ;;
  esac
}

# Desmarca a nota tocada

function MARKNOTADOWN() {
  case "$MARKNOTASHM" in
    DO) VAIPARA 12 4
        echo -e '\033[30;47mA\033[m' ;;
    RE) VAIPARA 12 8
        echo -e '\033[30;47mS\033[m' ;;
    MI) VAIPARA 12 12
        echo -e '\033[30;47mD\033[m' ;;
    FA) VAIPARA 12 16
        echo -e '\033[30;47mF\033[m' ;;
    SOL) VAIPARA 12 20
         echo -e '\033[30;47mG\033[m' ;;
    LA) VAIPARA 12 24
        echo -e '\033[30;47mH\033[m' ;;
    SI) VAIPARA 12 28
        echo -e '\033[30;47mJ\033[m' ;;
    DO1) VAIPARA 12 32
         echo -e '\033[30;47mK\033[m' ;;
    RE1) VAIPARA 12 36
         echo -e '\033[30;47mL\033[m' ;;
    MI1) VAIPARA 12 40
         echo -e '\033[30;47mZ\033[m' ;;
    FA1) VAIPARA 12 44
         echo -e '\033[30;47mX\033[m' ;;
    SOL1) VAIPARA 12 48
          echo -e '\033[30;47mC\033[m' ;;
    LA1) VAIPARA 12 52
         echo -e '\033[30;47mV\033[m' ;;
    SI1) VAIPARA 12 56
         echo -e '\033[30;47mB\033[m' ;;
    DOS) VAIPARA 7 6
         echo -e '\033[37;40m1\033[m' ;;
    RES) VAIPARA 7 10
         echo -e '\033[37;40m2\033[m' ;;
    FAS) VAIPARA 7 18
         echo -e '\033[37;40m3\033[m' ;;
    SOLS) VAIPARA 7 22
          echo -e '\033[37;40m4\033[m' ;;
    LAS) VAIPARA 7 26
         echo -e '\033[37;40m5\033[m' ;;
    DO1S) VAIPARA 7 34
          echo -e '\033[37;40m6\033[m' ;;
    RE1S) VAIPARA 7 38
          echo -e '\033[37;40m7\033[m' ;;
    FA1S) VAIPARA 7 46
          echo -e '\033[37;40m8\033[m' ;;
    SOL1S) VAIPARA 7 50
          echo -e '\033[37;40m9\033[m' ;;
    LA1S) VAIPARA 7 54
          echo -e '\033[37;40m0\033[m' ;;
  esac
}

# Liga os Leds de acordo com a nota tocada

function LEDSETI() {
  case "$SHMLEDDY" in
    1) setleds -caps
       setleds +num
       LASTL="setleds -caps ; setleds +num"
       SHMLEDDY=`expr $SHMLEDDY + 1` ;;
    2) setleds -num
       setleds +caps
       LASTL="setleds -num ; setleds +caps"
       SHMLEDDY=`expr $SHMLEDDY - 1` ;;
  esac
}

# Funcao para salvar arquivos .shm

function SALVAR_ARQUIVO() {
echo "######################################################" > $HOME/musicas-gripe/"$SALVARSHM".shm
echo "## Piano Gripe 3.0 - http://cltfc.sites.uol.com.br  ##" >> $HOME/musicas-gripe/"$SALVARSHM".shm
echo "######################################################" >> $HOME/musicas-gripe/"$SALVARSHM".shm
echo "## Envie agora mesmo a sua m˙sica e o seu nome para ##" >> $HOME/musicas-gripe/"$SALVARSHM".shm
echo "##          fernandes_pablo@yahoo.com.br            ##" >> $HOME/musicas-gripe/"$SALVARSHM".shm
echo "######################################################" >> $HOME/musicas-gripe/"$SALVARSHM".shm
echo "##SUA M⁄SICA ABAIXO:" >> "$HOME"/musicas-gripe/"$SALVARSHM".shm
echo "####################" >> "$HOME"/musicas-gripe/"$SALVARSHM".shm
echo "echo -ne '\\033[11;250]'" >> "$HOME"/musicas-gripe/"$SALVARSHM".shm
echo "$SEQSHM" >> "$HOME"/musicas-gripe/"$SALVARSHM".shm 2> /dev/null
echo "echo -ne '\\033[11;100]\\033[10;750]'" >> "$HOME"/musicas-gripe/"$SALVARSHM".shm
chmod +x "$HOME"/musicas-gripe/"$SALVARSHM".shm
VAIPARA 17 6
echo -e "\033[31;1mSALVANDO: "$HOME"/musicas-gripe/"$SALVARSHM".shm                  \033[m"
sleep 2
}


#--------------------------------------------------------------------------#


## Sess„o:
###################
## AVISO INICIAL ##
###################
# 1) trap "" 2 20 È para proibir que o usu·rio termine a execuÁ„o usando
#    Ctrl+c ou Ctrl+z. Coloquei isso, por causa de comandos como stty -echo.
#    se o usu·rio desse um Ctrl+c no meio deste aviso, ele iria voltar para
#    o prompt sem conseguir ver nada que ele tecla (comando stty -echo), e
#    esse comando aparece constantemente no cÛdigo do Piano Gripe.
#
# 2) Para entender o que faz o comando stty -echo. Lembre no hora do login
#    (no shell n„o interativo de login), vocÍ digita o nome do usu·rio (e
#    consegue ver tudo que est· digitando) e depois digita a senha (mas
#    desta vez, o que vocÍ tecla n„o aparece na tela). O efeito desse comando
#    È exatamente o mesmo. Coloquei ele, para o usu·rio n„o destrua os gr·-
#    ficos do Piano Gripe digitando coisas e aparecendo na tela. O comando
#    para voltar ao normal È "stty echo".
#
# 3) Depois de fazer todo o texto do aviso aparecer, espere 4 segundos e
#    execute o programa "clear" para limpar a tela. Pois, a imagem do
#    teclado e seus comandos ser„o os prÛximos gr·ficos.

trap "" 2 20 #1
clear
setleds -num ; setleds -caps
stty -echo #2
VAIPARA 10 15
echo -e '\033[46;30m              Piano Gripe 3.0               \033[m'
VAIPARA 12 15
echo -e '\033[40;31;1m"Nao execute esse programa em um terminal\033[m'
VAIPARA 13 15
echo -e '\033[40;31;1mdo modo grafico. Utilize-o no MODO TEXTO."\033[m'
VAIPARA 22 33
echo -e '\033[40;33;1mPablo Fernandes\033[m'
VAIPARA 23 26
echo -e '\033[40;34;1mfernandes_pablo@yahoo.com.br\033[m'
sleep 4 # 3
clear   # 3
stty echo
echo ; echo


#--------------------------------------------------------------------------#


## Sess„o:
#######################
## IMAGEM DO TECLADO ##
#######################
# Vou dar um jeito nas prÛximas versıes de organizar esse cÛdigo
# Ele foi construÌdo a base de espaÁos com plano de fundo pintado.
# Uma idÈia que AurÈlio (aurelio.net) sugeriu, foi desenhar normalmente
# o teclado usando somente caracteres ASCII, usando caracteres do tipo
# "#", "@", "%" para representar as cores, e depois mapearia com o sed,
# adicionando os caracteres de controle de cores. Se alguÈm quiser ajudar,
# mande um e-mail.


##### APRENDENDO A COLORIR TEXTOS ##########################################
#
# Para colorir um texto usando o comando echo, veja a sintaxe:
# echo -e '\033[N1mTexto aqui!\033[m'
#
# Onde: N1 -> CÛdigo da cor ou propriedade.
#       m -> indica que depois dele comeÁa o texto
#	\033[m -> no final do comando para que a cor volte ao normal,
#		  caso contr·rio, a cor ser· definida para os textos
#		  seguintes.
#
# CÛdigo de cores da letra -> vai de 30 a 37
# CÛdgio de cores do fundo -> vai de 40 a 47
# CÛdgio de propriedades -> 5 (pisca-pisca)
#			    7 (cores invertidas)
#			    1 (cor brilhante)
#			    0 (sem cores)
#
# 1) Para usar um fundo azul com cor da letra vermelho e piscando?
# R: echo -e '\033[44;31;5mTexto aqui!\033[m'
#
# 2) Para usar somente a cor da letra vermelha?
# R: echo -ne '\033[31mTexto aqui!\033[m'
#
# Entendeu? VocÍ vai misturando os n˙meros, separando-os com ";".
#
# DICA1: A propriedade 1 (cor brilhante), deve ser usado junto com a cor
#	 da letra. Em alguns casos, mudam a cor e em outros casos apenas
#        deixa a cor da letra mais clara.
#
# DICA2: Teste os cÛdigos das cores e monte uma tabela para consulta :D
#        ou use o zzcores do funcoeszz (m„o na roda para programadores
#        Shell. Pegue em http://aurelio.net/zz)

echo
echo -e ' --------------------------------------------------------\'
echo -e '||\033[44;39;1m Piano Gripe 3.1 -  \033[44;31;5mThe ShellMusic\033[m\033[44;33;1m                     \033[m||'
echo -e '||-------------------------------------------------------||'
echo -e '||\033[47;37m  \033[m 1 \033[47;37m \033[m 2 \033[47;37m  \033[m \033[47;37m  \033[m 3 \033[47;37m \033[m 4 \033[47;37m \033[m 5 \033[47;37m  \033[m \033[47;37m  \033[m 6 \033[47;37m \033[m 7 \033[47;37m  \033[m \033[47;37m  \033[m 8 \033[47;37m \033[m 9 \033[47;37m \033[m 0 \033[47;37m  \033[m||'
echo -e '||\033[47;37m  \033[m   \033[47;37m \033[m   \033[47;37m  \033[m \033[47;37m  \033[m   \033[47;37m \033[m   \033[47;37m \033[m   \033[47;37m  \033[m \033[47;37m  \033[m   \033[47;37m \033[m   \033[47;37m  \033[m \033[47;37m  \033[m   \033[47;37m \033[m   \033[47;37m \033[m   \033[47;37m  \033[m||'
echo -e '||\033[47;37m  \033[m   \033[47;37m \033[m   \033[47;37m  \033[m \033[47;37m  \033[m   \033[47;37m \033[m   \033[47;37m \033[m   \033[47;37m  \033[m \033[47;37m  \033[m   \033[47;37m \033[m   \033[47;37m  \033[m \033[47;37m  \033[m   \033[47;37m \033[m   \033[47;37m \033[m   \033[47;37m  \033[m||'
echo -e '||\033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m||'
echo -e '||\033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m \033[47;37m   \033[m||'
echo -e '||\033[47;30m A \033[m \033[47;30m S \033[m \033[47;30m D \033[m \033[47;30m F \033[m \033[47;30m G \033[m \033[47;30m H \033[m \033[47;30m J \033[m \033[47;30m K \033[m \033[47;30m L \033[m \033[47;30m Z \033[m \033[47;30m X \033[m \033[47;30m C \033[m \033[47;30m V \033[m \033[47;30m B \033[m||'
echo -e ' \-------------------------------------------------------||'
echo -e ''
echo -e '            \033[40;32;1mEscolha Suas Teclas Pelas Etiquetas\033[m'


#--------------------------------------------------------------------------#


## Sess„o:
##################################
## MENU DE CONTROLES DO USU¡RIO ##
##################################
# Essas linhas abaixo s„o apenas os textos que aparecem no lado direito
# do teclado. Coloquei dentro de uma funÁ„o, para que depois ela possa
# ser chamada no loop do "controle do teclado". Isso para evitar que mesmo
# em qualquer BUG o usu·rio possa visualizar os controles como a opÁ„o
# "q", j· que Ctrl+c est· travado.

function _APARENCIAOPCOES {
VAIPARA 1 1
echo -e "\\033[31;41m$BARRA40SHM$BARRA40SHM\\033[m"
VAIPARA 2 24
echo -e '\033[40;34;1mhttp://cltfc.sites.uol.com.br\033[m'
VAIPARA 1 77
echo -e '\033[44;39m[Q]\033[m'
VAIPARA 1 21
echo -e '\033[41;36m(P) a b l o    (F) e r n a n d e s\033[m'
VAIPARA 1 1
echo -e '\033[41;38m-> S\033[44;32mH\033[41;38mM <-\033[m'
echo -e '\033[11;250]'	   #Coloca o tempo da nota mais longo (normal È 100)
VAIPARA 4 62
echo -e '\033[46;30;1m W \033[40;31;1m Toca Sequencia\033[m'
VAIPARA 5 62
echo -e '\033[46;30;1m E \033[40;31;1m Limpa Sequencia\033[m'
VAIPARA 6 62
echo -e '\033[46;30;1m T \033[40;31;1m Salva Sequencia\033[m'
VAIPARA 7 62
echo -e '\033[46;30;1m P \033[40;31;1m Pausa na Musica'
VAIPARA 9 62
echo -e '\033[40;33;1m    TEMPO\033[m'
VAIPARA 10 62
echo -e '\033[46;30;1m + \033[40;31;1m Aumentar'
VAIPARA 11 62
echo -e '\033[46;30;1m - \033[40;31;1m Diminuir'
VAIPARA 13 62
echo -e '\033[46;30;1m R \033[40;31;1m Exemplos (2)'
VAIPARA 14 62
echo -e '\033[46;30;1m Q \033[40;31;1m Sair\033[m'
}
_APARENCIAOPCOES


#--------------------------------------------------------------------------#


## Sess„o:
#########################
## EXEMPLOS DE M⁄SICAS ##
#########################
# M˙sica 2: Day Tripper dos Beatles (riffzinho do inÌcio),
# M˙sica 1: Iron Man do Black Sabbath (todo mundo conhece).
# Ao pressionar a tecla R (ou r) o "case" chama essa fun
# Á„o. N„o usei a vari·vel de espaÁo pq essa m˙sica fica
# legal com "sleep ,3", e a vari·vel de espaÁo poderia
# est· diferente (j· que os comandos + e - alteram seu
# conte˙do. Por esse motivo, escrevi o cÛdgio da m˙sica
# completo e para cada um dos dois tipos de $LANG que o
# programa suporta.

function _EXEMPLOSSHM {
if [ "$EXEMPLOSHM" = "1" ]; then
  echo -ne '\033[10;247]\a';sleep .3;sleep .3;
  echo -ne '\033[10;296]\a';sleep .3;sleep .3;
  echo -ne '\033[10;296]\a';sleep .3;
  echo -ne '\033[10;330]\a';sleep .3;
  echo -ne '\033[10;330]\a';sleep .3;sleep .3;
  echo -ne '\033[10;396]\a';sleep .3;
  echo -ne '\033[10;374]\a';sleep .3;
  echo -ne '\033[10;396]\a';sleep .3;
  echo -ne '\033[10;374]\a';sleep .3;
  echo -ne '\033[10;396]\a';sleep .3;
  echo -ne '\033[10;374]\a';sleep .3;
  echo -ne '\033[10;396]\a';sleep .3;
  echo -ne '\033[10;374]\a';sleep .3;
  echo -ne '\033[10;296]\a';sleep .3;sleep .3;
  echo -ne '\033[10;330]\a';sleep .3;sleep .3;
  echo -ne '\033[10;330]\a';sleep .3;
elif [ "$EXEMPLOSHM" = "2" ]; then
    echo -ne '\033[10;165]\a';sleep .3;sleep .3; #dois sleeps seguidos,È o mesmo
    echo -ne '\033[10;198]\a';sleep .3; #que o espaÁo "P" do Piano Gripe
    echo -ne '\033[10;209]\a';sleep .3; #pq entre uma nota e outra, tem
    echo -ne '\033[10;247]\a';sleep .3; #que ter um sleep, sen„o fica
    echo -ne '\033[10;330]\a';sleep .3; #inaudÌvel a m˙sica. Por isso
    echo -ne '\033[10;296]\a';sleep .3;sleep .3; #tambÈm,o mÌnimo de sleep,È ,1.
    echo -ne '\033[10;247]\a';sleep .3;
    echo -ne '\033[10;374]\a';sleep .3;sleep .3;
    echo -ne '\033[10;247]\a';sleep .3;
    echo -ne '\033[10;296]\a';sleep .3;
    echo -ne '\033[10;330]\a';sleep .3;
    echo -ne '\033[10;165]\a';sleep .3;sleep .3;
    echo -ne '\033[10;198]\a';sleep .3;
    echo -ne '\033[10;209]\a';sleep .3;
    echo -ne '\033[10;247]\a';sleep .3;
    echo -ne '\033[10;330]\a';sleep .3;
    echo -ne '\033[10;296]\a';sleep .3;sleep .3;
    echo -ne '\033[10;247]\a';sleep .3;
    echo -ne '\033[10;374]\a';sleep .3;sleep .3;
    echo -ne '\033[10;247]\a';sleep .3;
    echo -ne '\033[10;296]\a';sleep .3;
    echo -ne '\033[10;330]\a';sleep .3;
    echo -ne '\033[10;165]\a';sleep .3;sleep .3;
fi
case "$EXEMPLOSHM" in
  1) EXEMPLOSHM=`expr "$EXEMPLOSHM" + 1` ;;
  2) EXEMPLOSHM=`expr "$EXEMPLOSHM" - 1` ;;
esac
}


#--------------------------------------------------------------------------#


## Sess„o:
#########################
## CONTROLE DO TECLADO #####################
######################### GUIA DO CURIOSO ##
#                      #####################
#
############################################################################
#
#     OS COMENT¡RIOS DESSA SESS√O EST√O DESATUALIZADOS :(
#     NA VERS√O 2.50 DO PIANO GRIPE, ALGUNS C”DIGOS PROVAVELMENTE SER√O
#     REFEITOS, E ESTA SESS√O ESTAR¡ TOTALMENTE ATUALIZADA.
#
#     N√O ADIANTARIA COMENTAR ESSA PARTE AGORA, POIS QUASE NINGU…M
#     AT… O DIA 30.11.2003 (DATA DE ATUALIZA«√O DESSE C”DIGO) TESTOU O
#     PIANO GRIPE. VOU DIVULG¡-LO PARA QUE MAIS PESSOAS TESTEM E RELATEM
#     ERROS PARA MEU E-MAIL, PARA QUE EU POSSA FAZER UMA VERS√O EST¡VEL
#     E ENT√O, COMENTAR PASSO-A-PASSO AQUI.
#
#     OBRIGADO!
#
############################################################################
#
# AÌ comeÁa a loucura. Algumas coisas eu ainda n„o consegui fazer
# para enxugar o cÛdigo. Mas como ficou est·vel mesmo assim, decidi
# versionar como pronta deixando tais limpezas para prÛximas ver
# sıes. Comentar essa parte ser· difÌcil por falta de espaÁo, mas
# resolvi criar uma legenda da documentaÁ„o que aqui segue:
#
# 1) Remove o arquivo tempor·rio criado para executar a m˙sica. mais
#    a frente vocÍ ver· que eu ainda n„o consegui executar a m˙sica a
#    partir de uma vari·vel (como eu queria).
#
# 2) Quando o usu·rio digita alguma, depois do enter, o texto some.
#    a grande m·gica È essa, um caractere de controle dizendo que tudo
#    a partir do prompt TECLADO: seja apagado sempre que o loop voltar.
#    E fica assim, vocÍ digita, da enter, procura (com o case) o que vocÍ
#    digitou e executa os comandos, e depois volta para o comeÁo, apagando
#    o que vocÍ tinha digitado. Coloquei muitos espaÁos, para apagar al
#    guma cagada que o usu·rio possa fazer (como digitar um monte de letras
#    mesmo sabendo que o Piano Gripe sÛ aceita uma tecla de cada vez).
#
# 3) Tudo que È teclado (ver case) vai para, entre outros lugares, para
#    a vari·vel $SEQUENCIA1SHM onde sempre vai mostrar a nota que vocÍ
#    digitou na tela (sempre que o loop reinicia como falado na sess„o 1).
#
# 4) O tempo tambÈm È mostrado em tempo real :) como a SEQU NCIA. Esse
#    tempo, È a vari·vel $SLEEPSHM, que existe entre cada nota, e na opÁ„o
#    "P" tambÈm s„o dois $SLEEPSHM. O conte˙do dessa vari·vel eh o programa
#    sleep ,4 (por padr„o). Mas o usu·rio pode modific·-la com + e -.
#
# 5) Explicando um, o resto das notas s„o o mesmo funcionamento: Quando
#    o usu·rio toca uma tecla, o "read NOTAS" lÍ jogando na vari·vel NOTAS.
#    O case sai comparando para saber o que foi que digitou, nesse caso, foi
#    a letra A (ou a), que È o DÛ. Primeiro ele executa o conte˙do da vari·vel
#    $DO, isso È, primeiro sai o som (ver vari·vel $DO mais acima).
#    Depois tem SEQSHM=... Nessa etapa, ele grava nessa vari·vel:
#     ${SEQSHM}  (isso È, conserve o que j· existe)
#     ${SEQSHM}echo -ne '\\033[10;132]\\a';  (grave a nota DÛ e um ; literal)
#     ${SEQSHM}echo -ne '\\033[10;132]\\a';$SLEEPSHM (adicione um espaÁo e ;
#                                                     que È o conte˙do dessa
#                                                     vari·vel)
#     Agora se eu teclasse depois do A (DÛ) a letra "S" (RÈ) ficaria assim
#     o conte˙do da vari·vel:
#    echo -ne '\033[10;132]\a';sleep ,4;echo -ne '\033[10;147]\a';sleep 4,
#     e assim iria atÈ formar a m˙sica. Essa vari·vel depois È jogada dentro
#     de um arquivo cujo È atribuÌdo permiss„o x e executado.
#
#     OBS1: Note que em vez de usar "echo -ne \033[10..." para cada nota,
#           eu poderia chamar a vari·vel referente a nota, mas n„o consegui
#           fazÍ-lo (ainda).
#
#     OBS2: TambÈm n„o precisava jogar dentro de um arquivo para ser
#           executado. Bastava executar a vari·vel, que nela j· estariam
#           os comandos da m˙sica. Mas tambÈm ainda n„o consegui fazÍ-lo.
#   Bem, continuando...:
#
#   A prÛxima linha È facil: SEQUENCIA1SHM=${SEQUENCIA1SHM}+DÛ
#   Essa vari·vel È pada identificar no prompt SEQU NCIA cada nota que
#   vocÍ tecla (atÈ que a mesma seja apagada com o comando "E"). Ela
#   sempre conserva  o que existe e adiciona um +NOTA, ficando:
#   +DÛ+DÛ#+RÈ+Sol# sempre conservando a adicionando no final a nova nota.
#
#  Recapitulando: Quando cada nota È tocada:
#         1o) Toca a Nota (vari·veis notas)
#         2o) Adiciona a nota na sequÍncia para execuÁ„o posterior (w)
#         3o) Adiciona a nota no prompt SEQU NCIA
#
# 6) - Manda o conte˙do de $SEQSHM para o arquivo $HOME/tmp/shmusic.tmp
#    - Da permiss„o de execuÁ„o
#    - Executa o arquivo, expelindo a m˙sica
#        (Lembra que o conte˙do de $SEQSHM s„o todos os comandos gerados
#         quando cada nota È tocada (adiciona-se ao final da vari·vel)?)
#
# 7) - Esvazia o conte˙do das vari·veis $SEQUENCIA1SHM e $SEQSHM
#    - Apaga o arquivo $HOME/tmp/shmusic.tmp
#    - Apaga tudo o que tiver do prompt SEQU NCIA: a diante.
#
# 8) - Adiciona ao final de $SEQSHM mais um $SLEEPSHM
#    - Adiciona ao final de $SEQUENCIA1SHM um - (simbolizando um espaÁo
#                                                na sequÍncia gerada pelo
#                                                prompt SEQU NCIA: )
#
# 9) - Soa o exemplo contido na funÁ„o _EXEMPLOSSHM
#
# - e +) - Essa opÁ„o est· com o cÛdigo muito sujo
#          Vou preferir comentar na prÛxima vers„o quando retirar
#          a metade desse cÛdigo (mais da metade È sem necessidade)
#          Esse software foi fruto de um estudo sobre caracteres de
#          controle de cores, direÁ„o, som e a forma simples do while
#          e case, por isso a despreocupaÁ„o inicial de um cÛdigo limpo.
#          Ah, e o resultado foi que n„o consegui priorizar ALGUNS comandos
#          concatenados dentro do prÛprio if, e para deixar funcionando
#          bem, tive que dar pulos e voltas (resultado de cÛdigo sujo e
#          inseguro na estabilidade do Piano Gripe).
#          Mas resumindo a cagada, ele soma ou diminui o valor numeral
#          encontrada na vari·vel de espaÁo ($SLEEPSHM) deixando no
#          mÌnimo sleep ,1 e no m·ximo sleep ,9.
#
# q) - Define "sim" a vari·vel $PARASHM (cuja ser· utilizada no final)
#    - Apaga o arquivo shmusic.tmp
#    - Deixa o beep da m·quina em seu estado normal
#    - Sai do Piano Gripe com o cursor na linha 55 coluna 1
#
# *) Caso o usu·rio digite qualquer coisa que n„o esteja entre as opÁıes
#    dadas pelo Piano Gripe, as opÁıes cotidas na funÁ„o _APARENCIAOPCOES
#    s„o redefinidas, e continue :)
#
# 10) Se a vari·vel $PARASHM for igual a sim, pare o programa e saia do
#     loop. Sen„o, continue a loopar :D

rm -f "$HOME"/tmp/shmusic.tmp > /dev/null 2> /dev/null
[ ! -d "$HOME"/tmp ] && mkdir "$HOME"/tmp

while true
do
  VAIPARA 17 15
  echo -e '\033[0K'
  VAIPARA 19 6
  echo -e "\\033[40;36mSEQUENCIA:\\033[m "$SEQUENCIA1SHM""
  VAIPARA 18 6
  echo -e "\\033[40;36mTEMPO: "$SLEEPSHMLANG""
  VAIPARA 17 6
  echo -e '\033[40;36mTECLADO:\033[m \c'
  read -n1 NOTAS
  case "$NOTAS" in
    [aA]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
	    MARKNOTADOWN ; MARKNOTASHM=DO ; MARKNOTAUP
            $DO ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Do ; LEDSETI
            SEQSHM="${SEQSHM}echo -ne '\\033[10;132]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Ss]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
	    MARKNOTADOWN ; MARKNOTASHM=RE ; MARKNOTAUP
	    $RE ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Re ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;148]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Dd]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=MI ; MARKNOTAUP
	    $MI ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Mi ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;165]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Ff]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=FA ; MARKNOTAUP
	    $FA ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Fa ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;176]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Gg]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=SOL ; MARKNOTAUP
	    $SOL ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Sol ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;198]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Hh]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=LA ; MARKNOTAUP
	    $LA ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+La ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;220]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Jj]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=SI ; MARKNOTAUP
	    $SI ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Si ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;247]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Kk]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=DO1 ; MARKNOTAUP
	    $DO1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Do ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;264]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Ll]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=RE1 ; MARKNOTAUP
	    $RE1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Re ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;296]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Zz]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=MI1 ; MARKNOTAUP
	    $MI1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Mi ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;330]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Xx]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=FA1 ; MARKNOTAUP
	    $FA1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Fa ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;352]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Cc]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=SOL1 ; MARKNOTAUP
	    $SOL1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Sol ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;396]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Vv]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=LA1 ; MARKNOTAUP
	    $LA1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+La ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;440]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    [Bb]) [ "$CONTASHM" -lt "92" ] && {
	    CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=SI1 ; MARKNOTAUP
	    $SI1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Si ; LEDSETI
	    SEQSHM="${SEQSHM}echo -ne '\\033[10;494]\\a';$LASTL;$SLEEPSHMLANG"
	  } ;;
    1) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=DOS ; MARKNOTAUP
	 $DOS ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Do\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;143]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    2) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=RES ; MARKNOTAUP
	 $RES ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Re\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;157]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    3) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=FAS ; MARKNOTAUP
	 $FAS ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Fa\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;187]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    4) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=SOLS ; MARKNOTAUP
	 $SOLS ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Sol\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;209]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    5) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=LAS ; MARKNOTAUP
	 $LAS ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+La\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;233]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    6) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=DO1S ; MARKNOTAUP
	 $DOS1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Do\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;286]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    7) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=RE1S ; MARKNOTAUP
	 $RES1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Re\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;314]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    8) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=FA1S ; MARKNOTAUP
	 $FAS1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Fa\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;374]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    9) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=SOL1S ; MARKNOTAUP
	 $SOLS1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+Sol\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;418]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    0) [ "$CONTASHM" -lt "92" ] && {
         CONTASHM=`expr $CONTASHM + 1`
            MARKNOTADOWN ; MARKNOTASHM=LA1S ; MARKNOTAUP
	 $LAS1 ; SEQUENCIA1SHM=${SEQUENCIA1SHM}+La\# ; LEDSETI
	 SEQSHM="${SEQSHM}echo -ne '\\033[10;466]\\a';$LASTL;$SLEEPSHMLANG"
       } ;;
    ####################
    # TOCA A SEQU NCIA #
    ####################
    [wW]) stty -echo
	  setleds -num ; setleds -caps
	  echo "$SEQSHM" > "$HOME"/tmp/shmusic.tmp
	  chmod +x "$HOME"/tmp/shmusic.tmp
	  "$HOME"/tmp/shmusic.tmp
	  stty echo ;;
    #####################
    # APAGA A SEQU NCIA #
    #####################
    [Ee]) SEQUENCIA1SHM="" ; SEQSHM="" ; CONTASHM=1
	  setleds -num ; setleds -caps
          rm -f "$HOME"/tmp/shmusic.tmp
	  VAIPARA 19 15
	  echo -e '\033[0J' ;;
    ######################
    # ADICIONA UMA PAUSA #
    ######################
    [pP]) SEQSHM="${SEQSHM}$SLEEPSHMLANG"
          SEQUENCIA1SHM=${SEQUENCIA1SHM}\- ;;
    ###################
    # TOCA UM EXEMPLO #
    ###################
    [Rr]) stty -echo
          _EXEMPLOSSHM
	  stty echo ;;
    ###############################
    # DIMINUI O TEMPO ENTRE NOTAS #
    ###############################
    -) echo $SLEEPSHMLANG | tr "sleep ." " " | sed 's/^[ ]*//'| \
       sed 's/;$//' > "$HOME"/tmp/gripeshm.tmp

       if [ `cat "$HOME"/tmp/gripeshm.tmp` -gt 1 ]; then
         expr `echo $SLEEPSHMLANG | tr "sleep ." " " | \
         sed 's/^[ ]*//' | sed 's/;$//'` - 1 > "$HOME"/tmp/gripeshm.tmp
         SLEEPSHMLANG="sleep .`cat "$HOME"/tmp/gripeshm.tmp`;"
         rm -f "$HOME"/tmp/gripeshm.tmp
         continue
       fi
       ;;
    ###############################
    # AUMENTA O TEMPO ENTRE NOTAS #
    ###############################
    +) echo $SLEEPSHMLANG | tr "sleep ." " " | sed 's/^[ ]*//'| \
       sed 's/;$//' > "$HOME"/tmp/gripeshm.tmp
       if [ `cat "$HOME"/tmp/gripeshm.tmp` -lt 9 ]; then
         expr `echo $SLEEPSHMLANG | tr "sleep ." " " | \
         sed 's/^[ ]*//' | sed 's/;$//'` + 1 > "$HOME"/tmp/gripeshm.tmp
         SLEEPSHMLANG="sleep .`cat "$HOME"/tmp/gripeshm.tmp`;"
         rm -f "$HOME"/tmp/gripeshm.tmp
         continue
       fi
       ;;
    ###################
    # SALVA SEQU NCIA #
    ###################
    [Tt]) [ ! -d "$HOME"/musicas-gripe ] && mkdir "$HOME"/musicas-gripe
          [ ! -w "$HOME"/musicas-gripe ] && chmod +w "$HOME"/musicas-gripe
	  VAIPARA 17 6
	  echo -e '\033[40;36mNOME ("cancelar" p/ abortar):\033[m \c'
	  read SALVARSHM
	  stty -echo
	  if [ "$SALVARSHM" = "cancelar" -o "$SALVARSHM" = "CANCELAR" ];then
            stty echo
	    continue
	  elif [ -f "$HOME"/musicas-gripe/"$SALVARSHM".shm ];then
	    while true
	    do
	      VAIPARA 17 41
	      echo -e '\033[0K'
	      VAIPARA 17 6
	      echo -e '\033[40;36mSUBSTITUIR ARQUIVO EXISTENTE? (s/n)\033[m \c'
	      stty echo
	      read SALVARSIMOUNAO
	      stty -echo
	      case "$SALVARSIMOUNAO" in
		[sS]) SALVAR_ARQUIVO
	              stty echo
		      break
		      ;;
		[Nn])  stty echo
		       break ;;
		*) continue ;;
	      esac
	    done
	  else
	    SALVAR_ARQUIVO
            stty echo
	    continue
	  fi
          ;;
    ######################
    # SAI DO PIANO GRIPE #
    ######################
    [Qq]) PARASHM=1
	  setleds -num ; setleds -caps
	  rm -f "$HOME"/tmp/shmusic.tmp
          echo -e '\033[10;750]'
          echo -e '\033[11;100]'
	  LANG=$SALVALANG
	  VAIPARA 55 1
	  stty echo
          ;;
    *) _APARENCIAOPCOES ; continue
       ;;
  esac
  [ "$PARASHM" = "1" ] && break
done # :)

# Proposta de Emprego: Pablo Fernandes (fernandes_pablo@yahoo.com.br) hehehe
# http://cltfc.sites.uol.com.br
# AbraÁos e "Vida Longa ao Shell Script"
# Fui
