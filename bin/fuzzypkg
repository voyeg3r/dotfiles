#!/bin/env bash
# vim: softtabstop=2 shiftwidth=2 expandtab
# voidlinux fuzzy package management xbps

# Set a bunch of config test paths
if [ -n "${XDG_CONFIG_DIR}" ] ; then
  IFS=':' read -ra configs <<<"${XDG_CONFIG_DIR}"
  for (( i=0; i<${#configs[@]}; i++)) do
    configs[$i]="${configs[$i]}/fuzzypkg.conf"
  done
fi

configs+=( "${HOME}/.fuzzypkg.conf" "${HOME}/.config/fuzzypkg.conf" )

delay_exit() {
  printf "\033]0;\a"
  if [ -n "${FDELAY}" ] && [ "${FDELAY}" -gt 0 ] ; then
    echo -e "\n"
    read -n 1 -s -r -p "Press any key to continue"
    echo -e "\n"
  fi
}

colorize() {
  local string
  string="${1//\[/\\033\[0;32m\[}"
  string="${string//\]/\]\\033\[0m}"
  echo -n -e "${string}"
}

main() {
  trap delay_exit EXIT
  SHELL="$(command -v bash)"

  CL_KEY="alt-c" ; HP_KEY="alt-h" ; FL_KEY="alt-f"
  EX_KEY="alt-e" ; FP_KEY="alt-p"
  FILE_PREVIEW=( "bat" "-f" )

  for config in "${configs[@]}" ; do
    if [ -f "${config}" ] ; then
      #shellcheck disable=SC1090
      source "${config}"
      break
    fi
  done

  [ -z "$HIDE_HEADER" ] && SHOW_HEADER=1

  if command -v fzf > /dev/null 2>&1; then
    FUZZYSEL=fzf
    fuzzy_default_options=(
      "--inline-info" "--cycle" "--ansi" "-e" "-m"
      "--no-sort" "--layout=reverse-list"
      "--border=${BORDER:-sharp}"
    )
    export FZF_DEFAULT_OPTS="${fuzzy_default_options[*]}"
  else
    echo "Unable to find 'fzf' fuzzy finder"
    exit
  fi

  HEADER=$( colorize "[ENTER] Add/Remove selected [TAB] Toggle selection
[${FL_KEY^^}] File list [${HP_KEY^^}] Homepage [${CL_KEY^^}] Changelog" )
  FHEADER=$( colorize "[${FP_KEY^^}] File preview [${EX_KEY^^}] Extract files" )

  #shellcheck disable=SC2016
  selected="$(
    xbps-query -R --search= \
    | sed -Er "s/(\[\*\].*)/$( printf "\033[0;32m" )\1$( printf "\033[0m" )/"\
    | "${FUZZYSEL}" \
      ${SHOW_HEADER:+--header="${HEADER}"} \
        --prompt "  Package name > " \
        --marker="M" \
        --preview="xq {2}" \
        --preview-window="down:wrap:${PREVIEW_BORDER:-border-sharp}" \
        --bind "${HP_KEY}:execute-silent[ xbps-query -p homepage -R '{2}' | xargs -Iurl xdg-open url & ]" \
        --bind "${CL_KEY}:execute-silent[ xbps-query -p changelog -R '{2}'| xargs -Iurl xdg-open url & ]" \
        --bind "${FL_KEY}:execute:
          xbps-query -R -f {2} \
          | ${FUZZYSEL} \
            ${SHOW_HEADER:+--header=\"${FHEADER}\"} \
            --prompt '  {2} > ' \
            --marker=\"E\" \
            --preview \"xbps-query -R --cat \{1} {2} | ${FILE_PREVIEW[*]}\" \
            --preview-window=\"down:wrap:hidden:${PREVIEW_BORDER:-border-sharp}\" \
            --bind \"${FP_KEY}:toggle-preview\" \
            --bind \"${EX_KEY}:execute-silent[\
              while IFS= read -r line; do
                tree=\"\\\${line%/*}\"
                mkdir -p \"\\\${tree#*/}\"
                xbps-query -R --cat \"\\\${line}\" {2} > \"\\\${line#*/}\"
              done < \"\{+f}\"
            ]\" \
        " \
        ${1:+--query "$1"}
  )"

  # override FDELAY if nothing was selected
  [ -z "${selected}" ] && FDELAY=0 exit

  installed_re="(\[.\])[ ]([^ ]+)"

  while read -r line; do
    if [[ ${line} =~ ${installed_re} ]]; then
      [ "${BASH_REMATCH[1]}" == "[-]" ] && INSTALL+=( "${BASH_REMATCH[2]}" ) || UNINSTALL+=( "${BASH_REMATCH[2]}" )
    fi
  done <<<"${selected}"

  if [ "${EUID}" -eq 0 ]; then
    PRIV=""
  elif command -v doas > /dev/null 2>&1; then
    PRIV="doas "
  elif command -v sudo > /dev/null 2>&1; then
    PRIV="sudo "
  else
    echo "Unable to execute as root, install one of [sudo, doas]"
    exit 1
  fi

  if [ -n "${UNINSTALL[*]}" ]; then
    UNINSTALL_CMD="xbps-remove -R ${UNINSTALL[*]}"
    echo "Executing ${UNINSTALL_CMD}"
    #shellcheck disable=SC2086
    ${PRIV}${UNINSTALL_CMD}
  fi
  if [ -n "${INSTALL[*]}" ]; then
    INSTALL_CMD="xbps-install -S ${INSTALL[*]}"
    echo "Executing ${INSTALL_CMD}"
    #shellcheck disable=SC2086
    ${PRIV}${INSTALL_CMD}
  fi
}

usage() {
  cat <<EOF
Usage: ${BASH_ARGV0##*/} search term

Create a configuration file at one of:

$( for config in "${configs[@]}" ; do echo -e "  \033[0;32m${config}\033[0m" ; done )

Example:

# Changelog key
CL_KEY="alt-c"

# Homepage key
HP_KEY="alt-h"

# File list key
FL_KEY="alt-f"

# File preview key
FP_KEY="alt-p"

# File extraction key
EX_KEY="alt-e"

# File preview helper - this must be able to detect binary data and NOT display it!
FILE_PREVIEW=( "bat" "-f" )

# FZF border style
BORDER="sharp"

# FZF preview border style
PREVIEW_BORDER="border-top"

# Hide header that shows keybinds
HIDE_HEADER=1

See 'man fzf' for more keybind documentation.

EOF
}

while getopts "h" opt ; do
  case "${opt}" in
    h|?)
      usage
      exit
      ;;
    *)
      ;;
  esac
done

echo -n -e "\033]2;${BASH_ARGV0##*/}\007"
main "$@"
